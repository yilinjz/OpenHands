```patch
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -7,14 +7,18 @@
 class KeyTransformIsNull(lookups.IsNull):
     # key__isnull=False is the same as has_key='key'
     def as_oracle(self, compiler, connection):
+        has_key_lookup = HasKey(self.lhs.lhs, self.lhs.key_name)
         if not self.rhs:
-            return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)
-        return super().as_sql(compiler, connection)
+            # key__isnull=False: Check if key exists.
+            return has_key_lookup.as_oracle(compiler, connection)
+        # key__isnull=True: Check if key does NOT exist.
+        sql, params = has_key_lookup.as_oracle(compiler, connection)
+        return 'NOT (%s)' % sql, params
 
     def as_sqlite(self, compiler, connection):
+        has_key_lookup = HasKey(self.lhs.lhs, self.lhs.key_name)
         if not self.rhs:
-            return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)
-        return super().as_sql(compiler, connection)
+            return has_key_lookup.as_sqlite(compiler, connection)
+        sql, params = has_key_lookup.as_sqlite(compiler, connection)
+        return 'NOT (%s)' % sql, params
 
 
 class KeyTransformIn(lookups.In):

```
