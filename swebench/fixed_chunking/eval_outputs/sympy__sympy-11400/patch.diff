```patch
--- a/sympy/printing/ccode.py
+++ b/sympy/printing/ccode.py
@@ -16,7 +16,7 @@
 from sympy.core import S
 from sympy.core.compatibility import string_types, range
 from sympy.codegen.ast import Assignment
-from sympy.printing.codeprinter import CodePrinter
+from sympy.printing.codeprinter import CodePrinter, requires_find_shared_expressions
 from sympy.printing.precedence import precedence
 from sympy.sets.fancysets import Range
 
@@ -173,6 +173,11 @@
         """
         Print Function calls appropriately.
         """
+        # Handle specific functions first
+        if expr.func == S.sinc:
+            # sinc(x) -> Piecewise((sin(x)/x, Ne(x, 0)), (1, True))
+            return self._print(expr.rewrite(Piecewise))
+
         if expr.func.__name__ in self.known_functions:
             cond_cfunc = self.known_functions[expr.func.__name__]
             if isinstance(cond_cfunc, str):
@@ -211,6 +216,7 @@
                 expr.func, self._print(expr.func(*expr.args)))
 
     def _print_Pow(self, expr):
+        # XXX: C specific, should this be in the base class?
         if "Pow" in self.functions:
             return self._print_Function(expr)
         PREC = precedence(expr)
@@ -241,6 +247,7 @@
         else:
             return CodePrinter._print_Pow(self, expr)
 
+    @requires_find_shared_expressions
     def _print_Piecewise(self, expr):
         # This method requires find_shared_expressions() to be executed before
         # code printing, e.g.:
```
