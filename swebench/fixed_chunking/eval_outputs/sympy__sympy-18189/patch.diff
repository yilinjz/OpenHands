```patch
--- a/sympy/solvers/diophantine.py
+++ b/sympy/solvers/diophantine.py
@@ -100,9 +100,9 @@
                     'syms should be given as a sequence, e.g. a list')
             syms = [i for i in syms if i in var]
             if syms != var:
-                dict_sym_index = dict(zip(syms, range(len(syms))))
+                # Solve using default var order (passing permute), then reorder
+                dict_sym_index = dict(zip(syms, range(len(syms)))) # Map desired symbols to desired indices
                 return {tuple([t[dict_sym_index[i]] for i in var])
-                            for t in diophantine(eq, param)}
+                            for t in diophantine(eq, param, permute=permute)}
         n, d = eq.as_numer_denom()
         if n.is_number:
             return set()
```
