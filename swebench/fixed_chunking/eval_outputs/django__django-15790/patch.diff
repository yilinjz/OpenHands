```patch
--- a/django/core/checks/templates.py
+++ b/django/core/checks/templates.py
@@ -49,19 +49,24 @@
 def check_for_template_tags_with_the_same_name(app_configs, **kwargs):
     errors = []
     libraries = defaultdict(list)
-
+
     for conf in settings.TEMPLATES:
+        # DjangoTemplates backend specific check
+        if conf["BACKEND"] != "django.template.backends.django.DjangoTemplates":
+            continue
         custom_libraries = conf.get("OPTIONS", {}).get("libraries", {})
         for module_name, module_path in custom_libraries.items():
             libraries[module_name].append(module_path)
 
+    # Libraries are loaded from installed applications ("templatetags" package)
+    # and builtins ("django/templatetags").
     for module_name, module_path in get_template_tag_modules():
         libraries[module_name].append(module_path)
 
     for library_name, items in libraries.items():
-        if len(items) > 1:
+        # Check for duplicate paths for the same library name.
+        unique_items = set(items)
+        if len(unique_items) > 1:
             errors.append(
                 Error(
                     E003.msg.format(
                         repr(library_name),
-                        ", ".join(repr(item) for item in items),
+                        ", ".join(repr(item) for item in unique_items),
                     ),
                     id=E003.id,
                 )

```
