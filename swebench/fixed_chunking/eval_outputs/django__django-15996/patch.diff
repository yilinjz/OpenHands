```patch
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -1,5 +1,6 @@
 import collections
 import datetime
+import enum
 import functools
 import inspect
 import math
@@ -106,11 +107,22 @@
 class EnumSerializer(BaseSerializer):
     def serialize(self):
         enum_class = self.value.__class__
+        # If the enum is a Flag boundary, try to decompose it.
+        if issubclass(enum_class, enum.Flag):
+            members, uncovered = enum._decompose(enum_class, self.value)
+            if not uncovered:
+                # Sort members by value to ensure deterministic output.
+                members.sort(key=lambda m: m.value)
+                module = enum_class.__module__
+                imports = {"import %s" % module}
+                if not members:
+                    # Handle the zero case.
+                    return "%s.%s(0)" % (module, enum_class.__qualname__), imports
+                return " | ".join(
+                    "%s.%s.%s" % (module, enum_class.__qualname__, member.name)
+                    for member in members
+                ), imports
         module = enum_class.__module__
-        return (
-            "%s.%s[%r]" % (module, enum_class.__qualname__, self.value.name),
-            {"import %s" % module},
-        )
+        imports = {"import %s" % module}
+        return "%s.%s[%r]" % (module, enum_class.__qualname__, self.value.name), imports
 
 
 class FloatSerializer(BaseSimpleSerializer):
@@ -229,7 +241,7 @@
     _registry = {
         # Builtins
         dict: DictionarySerializer,
-        models.Choices: ChoicesSerializer,
+        enum.Enum: EnumSerializer,
         enum.Enum: EnumSerializer,
         datetime.datetime: DatetimeDatetimeSerializer,
         (datetime.date, datetime.timedelta, datetime.time): DateTimeSerializer,
@@ -248,6 +260,7 @@
         uuid.UUID: UUIDSerializer,
         pathlib.PurePath: PathSerializer,
         os.PathLike: PathLikeSerializer,
+        models.Choices: ChoicesSerializer,
     }
 
     @classmethod
```
