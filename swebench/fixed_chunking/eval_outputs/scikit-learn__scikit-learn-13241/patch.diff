```patch
--- a/sklearn/decomposition/kernel_pca.py
+++ b/sklearn/decomposition/kernel_pca.py
@@ -174,6 +174,16 @@
             indices = self.lambdas_.argsort()[::-1]
             self.lambdas_ = self.lambdas_[indices]
             self.alphas_ = self.alphas_[:, indices]
+
+        # fix sign ambiguity of eigenvectors
+        # The eigenvectors are unique up to a sign flip.
+        # We can fix the sign by requiring the element with largest absolute value
+        # to be positive. If this element is zero, the sign is arbitrary.
+        max_abs_cols = np.argmax(np.abs(self.alphas_), axis=0)
+        signs = np.sign(self.alphas_[max_abs_cols, range(self.alphas_.shape[1])])
+        # Handle the case where the max absolute value element is zero
+        signs[signs == 0] = 1
+        self.alphas_ *= signs
 
         # remove eigenvectors with a zero eigenvalue (or close to zero)
         if self.remove_zero_eig:
```
