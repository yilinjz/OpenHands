```patch
--- a/django/contrib/sessions/backends/base.py
+++ b/django/contrib/sessions/backends/base.py
@@ -123,9 +123,9 @@
 
     def _legacy_decode(self, session_data):
         # RemovedInDjango40Warning: pre-Django 3.1 format will be invalid.
-        encoded_data = base64.b64decode(session_data.encode('ascii'))
         try:
             # could produce ValueError if there is no ':'
+            encoded_data = base64.b64decode(session_data.encode('ascii'))
             hash, serialized = encoded_data.split(b':', 1)
             expected_hash = self._hash(serialized)
             if not constant_time_compare(hash.decode(), expected_hash):
@@ -134,8 +134,8 @@
             else:
                 return self.serializer().loads(serialized)
         except Exception as e:
-            # ValueError, SuspiciousOperation, unpickling exceptions. If any of
-            # these happen, just return an empty dictionary (an empty session).
+            # ValueError, SuspiciousOperation, unpickling exceptions,
+            # binascii.Error. If any of these happen, return an empty dictionary.
             if isinstance(e, SuspiciousOperation):
                 logger = logging.getLogger('django.security.%s' % e.__class__.__name__)
                 logger.warning(str(e))
```
