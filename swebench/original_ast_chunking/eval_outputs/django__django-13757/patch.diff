```patch
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -44,14 +44,20 @@
     def as_oracle(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)
-        return super().as_sql(compiler, connection)
+        # key__isnull=True should check that the key does not exist.
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        key_name = self.lhs.key_name
+        params = lhs_params + [f'$.{key_name}']
+        return 'NOT JSON_EXISTS(%s, %s)' % (lhs, '%s'), params
 
     def as_sqlite(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)
-        return super().as_sql(compiler, connection)
-
-
+        # key__isnull=True should check that the key does not exist.
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        key_name = self.lhs.key_name
+        params = lhs_params + [f'$.{key_name}']
+        return 'JSON_TYPE(%s, %s) IS NULL' % (lhs, '%s'), params
 
 
 class KeyTransformExact(JSONExact):
```
