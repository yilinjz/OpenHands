```patch
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1,6 +1,7 @@
 """
 Create SQL queries.
 """
+
 import copy
 import functools
 import inspect
@@ -12,6 +13,7 @@
 from django.core.exceptions import EmptyResultSet, FieldError, MultipleObjectsReturned, ObjectDoesNotExist
 from django.db import DEFAULT_DB_ALIAS, NotSupportedError, connections
 from django.db.models.constants import LOOKUP_SEP
+from django.db.models.expressions import BaseExpression
 from django.db.models.fields import Field
 from django.db.models.lookups import Lookup
 from django.db.models.query_utils import Q, check_rel_lookup_compatibility
@@ -1128,7 +1130,9 @@
 
     def check_filterable(self, expression):
         """Raise an error if expression cannot be used in a WHERE clause."""
-        if not getattr(expression, 'filterable', True):
+        # Only check the 'filterable' attribute on Expression objects.
+        # Values like model instances, strings, numbers are always okay here.
+        if isinstance(expression, BaseExpression) and not getattr(expression, 'filterable', True):
             raise NotSupportedError(
                 expression.__class__.__name__ + ' is disallowed in the filter '
                 'clause.'

```
