```patch
--- a/sklearn/neighbors/nca.py
+++ b/sklearn/neighbors/nca.py
@@ -11,6 +11,7 @@
 from __future__ import print_function
 
 from warnings import warn
+import numbers
 import numpy as np
 import sys
 import time
@@ -40,7 +41,8 @@
         # Check the preferred dimensionality of the projected space
         if self.n_components is not None:
             check_scalar(self.n_components, 'n_components', int, 1)
-            check_scalar(self.n_components, 'n_components', int, 1)
+            check_scalar(self.n_components, 'n_components', numbers.Integral,
+                         min_val=1)
 
             if self.n_components > X.shape[1]:
                 raise ValueError('The preferred dimensionality of the '
@@ -59,9 +61,12 @@
                                   'previously learned transformation ({}).'
                                   .format(X.shape[1],
                                           self.components_.shape[1]))
-
-        check_scalar(self.max_iter, 'max_iter', int, 1)
-        check_scalar(self.tol, 'tol', float, 0.)
-        check_scalar(self.verbose, 'verbose', int, 0)
+        
+        check_scalar(self.max_iter, 'max_iter', numbers.Integral, min_val=1)
+        # Ensure tol is a non-negative float
+        check_scalar(self.tol, 'tol', numbers.Real, min_val=0.)
+        # Ensure verbose is a non-negative integer
+        check_scalar(self.verbose, 'verbose', numbers.Integral, min_val=0)
 
         if self.callback is not None:
             if not callable(self.callback):

```
