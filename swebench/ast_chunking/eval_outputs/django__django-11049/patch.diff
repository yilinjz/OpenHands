```diff
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -7,8 +7,8 @@
     """
     empty_strings_allowed = False
     default_error_messages = {
-        'invalid': _("'%(value)s' value has an invalid format. It must be in "
-                      "[DD] [HH:[MM:]]ss[.uuuuuu] format.")
+        'invalid': _("'%(value)s' value has an invalid format. It must be in [DD] "
+                      "[[HH:]MM:]ss[.uuuuuu] format.")
     }
     description = _("Duration")
 
@@ -51,10 +51,11 @@
         return '' if val is None else duration_string(val)
 
     def formfield(self, **kwargs):
-        return super().formfield(**{
+        defaults = {
             'form_class': forms.DurationField,
-            **kwargs,
-        })
+            'help_text': _('Enter duration in format [DD] [[HH:]MM:]ss[.uuuuuu]'),
+        }
+        defaults.update(kwargs)
+        return super().formfield(**defaults)


 class EmailField(CharField):

```
