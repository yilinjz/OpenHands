```diff
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -10,6 +10,7 @@
         return [
             *super().check(**kwargs),
             *self._check_max_length_attribute(**kwargs),
+            *self._check_choices_max_length(**kwargs),
         ]
 
     def _check_max_length_attribute(self, **kwargs):
@@ -33,6 +34,23 @@
         else:
             return []
 
+    def _check_choices_max_length(self, **kwargs):
+        if self.choices is None or self.max_length is None:
+            return []
+
+        errors = []
+        for value, _ in self.flatchoices:
+            if len(str(value)) > self.max_length:
+                errors.append(
+                    checks.Error(
+                        f"Choice '{value}' ({len(str(value))} characters) "
+                        f"is longer than the max_length ({self.max_length}).",
+                        obj=self,
+                        id='fields.E122',
+                    )
+                )
+        return errors
+
     def cast_db_type(self, connection):
         if self.max_length is None:
             return connection.ops.cast_char_field_without_max_length

```
