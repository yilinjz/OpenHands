2025-05-01 20:03:57,642 - INFO - Creating container for sympy__sympy-13031...
2025-05-01 20:03:57,703 - INFO - Container for sympy__sympy-13031 created: fa42c7eb44b71a82ab7bf469857522229b8331276be4047b4eda44af23dbc7fd
2025-05-01 20:03:58,068 - INFO - Container for sympy__sympy-13031 started: fa42c7eb44b71a82ab7bf469857522229b8331276be4047b4eda44af23dbc7fd
2025-05-01 20:03:58,076 - INFO - Intermediate patch for sympy__sympy-13031 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/sympy__sympy-13031/patch.diff, now applying to container...
2025-05-01 20:03:58,287 - INFO - >>>>> Applied Patch:
Checking patch sympy/matrices/common.py...
Hunk #1 succeeded at 376 (offset 362 lines).
Applied patch sympy/matrices/common.py cleanly.

2025-05-01 20:03:58,779 - INFO - Git diff before:
diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..9a4b0bae3f 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -376,9 +376,12 @@ def hstack(cls, *args):
         """
         if len(args) == 0:
             return cls._new()
-
-        kls = type(args[0])
-        return reduce(kls.row_join, args)
+        # Use iterative row_join instead of reduce
+        # Fixes issue with zero-row matrices, see issue #11974
+        res = args[0]
+        for i in range(1, len(args)):
+            res = res.row_join(args[i])
+        return res
 
     def reshape(self, rows, cols):
         """Reshape the matrix. Total number of elements must remain the same.
2025-05-01 20:03:58,779 - INFO - Eval script for sympy__sympy-13031 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/sympy__sympy-13031/eval.sh; copying to container...
2025-05-01 20:04:04,535 - INFO - Test runtime: 5.68 seconds
2025-05-01 20:04:04,535 - INFO - Test output for sympy__sympy-13031 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/sympy__sympy-13031/test_output.txt
2025-05-01 20:04:04,598 - INFO - Git diff after:
diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..9a4b0bae3f 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -376,9 +376,12 @@ def hstack(cls, *args):
         """
         if len(args) == 0:
             return cls._new()
-
-        kls = type(args[0])
-        return reduce(kls.row_join, args)
+        # Use iterative row_join instead of reduce
+        # Fixes issue with zero-row matrices, see issue #11974
+        res = args[0]
+        for i in range(1, len(args)):
+            res = res.row_join(args[i])
+        return res
 
     def reshape(self, rows, cols):
         """Reshape the matrix. Total number of elements must remain the same.
2025-05-01 20:04:04,598 - INFO - Grading answer for sympy__sympy-13031...
2025-05-01 20:04:04,599 - INFO - report: {'sympy__sympy-13031': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_sparse_matrix']}, 'PASS_TO_PASS': {'success': ['test_transpose', 'test_trace', 'test_CL_RL', 'test_add', 'test_errors', 'test_len', 'test_sparse_zeros_sparse_eye', 'test_copyin', 'test_sparse_solve'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-13031: resolved: False
2025-05-01 20:04:04,599 - INFO - Attempting to stop container sweb.eval.sympy__sympy-13031.20250501_195119...
2025-05-01 20:04:19,852 - INFO - Attempting to remove container sweb.eval.sympy__sympy-13031.20250501_195119...
2025-05-01 20:04:19,878 - INFO - Container sweb.eval.sympy__sympy-13031.20250501_195119 removed.
