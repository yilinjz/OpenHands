2025-05-01 19:52:47,239 - INFO - Creating container for django__django-11905...
2025-05-01 19:52:47,287 - INFO - Container for django__django-11905 created: 3befef0e911a768acd63bb979513d443a5e7c2353523145326a42468c3febbf1
2025-05-01 19:52:47,936 - INFO - Container for django__django-11905 started: 3befef0e911a768acd63bb979513d443a5e7c2353523145326a42468c3febbf1
2025-05-01 19:52:47,936 - INFO - Intermediate patch for django__django-11905 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/django__django-11905/patch.diff, now applying to container...
2025-05-01 19:52:48,203 - INFO - >>>>> Applied Patch:
Checking patch django/db/models/sql/query.py...
Hunk #1 succeeded at 1260 (offset 764 lines).
Applied patch django/db/models/sql/query.py cleanly.

2025-05-01 19:52:49,957 - INFO - Git diff before:
diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index ea51912e8b..c22c15c47f 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1260,6 +1260,12 @@ class Query(BaseExpression):
 
         self.check_filterable(value)
 
+        # Django ticket #30972: Prevent non-bool values for isnull lookup.
+        if lookups == ['isnull'] and not isinstance(value, bool):
+            raise ValueError(
+                "The QuerySet value for an isnull lookup must be True or False."
+            )
+
         clause = self.where_class()
         if reffed_expression:
             condition = self.build_lookup(lookups, reffed_expression, value)
2025-05-01 19:52:49,957 - INFO - Eval script for django__django-11905 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/django__django-11905/eval.sh; copying to container...
2025-05-01 19:52:59,536 - INFO - Test runtime: 9.50 seconds
2025-05-01 19:52:59,537 - INFO - Test output for django__django-11905 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/django__django-11905/test_output.txt
2025-05-01 19:52:59,615 - INFO - Git diff after:
diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index ea51912e8b..c22c15c47f 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1260,6 +1260,12 @@ class Query(BaseExpression):
 
         self.check_filterable(value)
 
+        # Django ticket #30972: Prevent non-bool values for isnull lookup.
+        if lookups == ['isnull'] and not isinstance(value, bool):
+            raise ValueError(
+                "The QuerySet value for an isnull lookup must be True or False."
+            )
+
         clause = self.where_class()
         if reffed_expression:
             condition = self.build_lookup(lookups, reffed_expression, value)
2025-05-01 19:52:59,615 - INFO - Grading answer for django__django-11905...
2025-05-01 19:52:59,617 - INFO - report: {'django__django-11905': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_iterator (lookup.tests.LookupTests)'], 'failure': ['test_isnull_non_boolean_value (lookup.tests.LookupTests)']}, 'PASS_TO_PASS': {'success': ['test_chain_date_time_lookups (lookup.tests.LookupTests)', 'test_count (lookup.tests.LookupTests)', 'test_custom_field_none_rhs (lookup.tests.LookupTests)', 'Lookup.can_use_none_as_rhs=True allows None as a lookup value.', 'test_error_messages (lookup.tests.LookupTests)', 'test_escaping (lookup.tests.LookupTests)', 'test_exact_exists (lookup.tests.LookupTests)', 'Transforms are used for __exact=None.', 'test_exact_query_rhs_with_selected_columns (lookup.tests.LookupTests)', 'test_exact_sliced_queryset_limit_one (lookup.tests.LookupTests)', 'test_exact_sliced_queryset_limit_one_offset (lookup.tests.LookupTests)', 'test_exact_sliced_queryset_not_limited_to_one (lookup.tests.LookupTests)', 'test_exclude (lookup.tests.LookupTests)', 'test_exists (lookup.tests.LookupTests)', 'test_get_next_previous_by (lookup.tests.LookupTests)', 'test_in (lookup.tests.LookupTests)', 'test_in_bulk (lookup.tests.LookupTests)', 'test_in_bulk_lots_of_ids (lookup.tests.LookupTests)', 'test_in_bulk_non_unique_field (lookup.tests.LookupTests)', 'test_in_bulk_with_field (lookup.tests.LookupTests)', 'test_in_different_database (lookup.tests.LookupTests)', 'test_in_keeps_value_ordering (lookup.tests.LookupTests)', 'test_lookup_collision (lookup.tests.LookupTests)', 'test_lookup_date_as_str (lookup.tests.LookupTests)', 'test_lookup_int_as_str (lookup.tests.LookupTests)', 'test_nested_outerref_lhs (lookup.tests.LookupTests)', 'test_none (lookup.tests.LookupTests)', 'test_nonfield_lookups (lookup.tests.LookupTests)', 'test_pattern_lookups_with_substr (lookup.tests.LookupTests)', 'test_regex (lookup.tests.LookupTests)', 'test_regex_backreferencing (lookup.tests.LookupTests)', 'test_regex_non_ascii (lookup.tests.LookupTests)', 'test_regex_non_string (lookup.tests.LookupTests)', 'test_regex_null (lookup.tests.LookupTests)', 'test_relation_nested_lookup_error (lookup.tests.LookupTests)', 'test_unsupported_lookups (lookup.tests.LookupTests)', 'test_values (lookup.tests.LookupTests)', 'test_values_list (lookup.tests.LookupTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11905: resolved: False
2025-05-01 19:52:59,617 - INFO - Attempting to stop container sweb.eval.django__django-11905.20250501_195119...
2025-05-01 19:53:14,957 - INFO - Attempting to remove container sweb.eval.django__django-11905.20250501_195119...
2025-05-01 19:53:14,990 - INFO - Container sweb.eval.django__django-11905.20250501_195119 removed.
