```patch
--- a/sympy/physics/quantum/tensorproduct.py
+++ b/sympy/physics/quantum/tensorproduct.py
@@ -168,11 +168,13 @@
             if isinstance(args[i], Add):
                 for aa in args[i].args:
                     tp = TensorProduct(*args[:i] + (aa,) + args[i + 1:])
-                    if isinstance(tp, TensorProduct):
-                        add_args.append(tp._eval_expand_tensorproduct(**hints))
-                    else:
-                        add_args.append(tp)
+                    # Handle the case where TensorProduct constructor pulls out scalars
+                    c_part, nc_part = tp.args_cnc()
+                    if len(nc_part) == 1 and isinstance(nc_part[0], TensorProduct):
+                        # Recursively expand the TensorProduct part
+                        nc_part = (nc_part[0]._eval_expand_tensorproduct(**hints),)
+                    # Recombine scalar and non-scalar parts
+                    add_args.append(Mul(*c_part) * Mul(*nc_part))
                 # For now, only expand one Add instance.
                 break
         else:

```
