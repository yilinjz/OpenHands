2025-05-01 19:59:18,676 - INFO - Creating container for pallets__flask-4992...
2025-05-01 19:59:18,714 - INFO - Container for pallets__flask-4992 created: d878e95e26439c1e221745601b560affa1f6ba826be46a4bcf6c414f7e4147d3
2025-05-01 19:59:19,924 - INFO - Container for pallets__flask-4992 started: d878e95e26439c1e221745601b560affa1f6ba826be46a4bcf6c414f7e4147d3
2025-05-01 19:59:19,924 - INFO - Intermediate patch for pallets__flask-4992 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/pallets__flask-4992/patch.diff, now applying to container...
2025-05-01 19:59:20,721 - INFO - >>>>> Applied Patch:
Checking patch src/flask/config.py...
Hunk #1 succeeded at 234 (offset 176 lines).
Hunk #2 succeeded at 245 (offset 176 lines).
Hunk #3 succeeded at 256 (offset 176 lines).
Hunk #4 succeeded at 264 (offset 176 lines).
Applied patch src/flask/config.py cleanly.

2025-05-01 19:59:21,307 - INFO - Git diff before:
diff --git a/src/flask/config.py b/src/flask/config.py
index d4fc310f..a11baa7a 100644
--- a/src/flask/config.py
+++ b/src/flask/config.py
@@ -234,6 +234,7 @@ class Config(dict):
         filename: str,
         load: t.Callable[[t.IO[t.Any]], t.Mapping],
         silent: bool = False,
+        mode: str = "r",
     ) -> bool:
         """Update the values in the config from a file that is loaded
         using the ``load`` parameter. The loaded data is passed to the
@@ -244,8 +245,9 @@ class Config(dict):
             import json
             app.config.from_file("config.json", load=json.load)
 
-            import toml
-            app.config.from_file("config.toml", load=toml.load)
+            # config.toml needs to be opened in binary mode
+            import tomllib
+            app.config.from_file("config.toml", load=tomllib.load, mode="rb")
 
         :param filename: The path to the data file. This can be an
             absolute path or relative to the config root path.
@@ -254,6 +256,7 @@ class Config(dict):
         :type load: ``Callable[[Reader], Mapping]`` where ``Reader``
             implements a ``read`` method.
         :param silent: Ignore the file if it doesn't exist.
+        :param mode: The mode to open the file with, defaults to ``"r"`` (text).
         :return: ``True`` if the file was loaded successfully.
 
         .. versionadded:: 2.0
@@ -261,7 +264,7 @@ class Config(dict):
         filename = os.path.join(self.root_path, filename)
 
         try:
-            with open(filename) as f:
+            with open(filename, mode=mode) as f:
                 obj = load(f)
         except OSError as e:
             if silent and e.errno in (errno.ENOENT, errno.EISDIR):
2025-05-01 19:59:21,307 - INFO - Eval script for pallets__flask-4992 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/pallets__flask-4992/eval.sh; copying to container...
2025-05-01 19:59:31,019 - INFO - Test runtime: 9.10 seconds
2025-05-01 19:59:31,019 - INFO - Test output for pallets__flask-4992 written to logs/run_evaluation/20250501_195119/swebench-lite_ast-chunking_BGE-base_gemini-2.5-pro_generations_swebench-lite/pallets__flask-4992/test_output.txt
2025-05-01 19:59:31,294 - INFO - Git diff after:
diff --git a/src/flask/config.py b/src/flask/config.py
index d4fc310f..a11baa7a 100644
--- a/src/flask/config.py
+++ b/src/flask/config.py
@@ -234,6 +234,7 @@ class Config(dict):
         filename: str,
         load: t.Callable[[t.IO[t.Any]], t.Mapping],
         silent: bool = False,
+        mode: str = "r",
     ) -> bool:
         """Update the values in the config from a file that is loaded
         using the ``load`` parameter. The loaded data is passed to the
@@ -244,8 +245,9 @@ class Config(dict):
             import json
             app.config.from_file("config.json", load=json.load)
 
-            import toml
-            app.config.from_file("config.toml", load=toml.load)
+            # config.toml needs to be opened in binary mode
+            import tomllib
+            app.config.from_file("config.toml", load=tomllib.load, mode="rb")
 
         :param filename: The path to the data file. This can be an
             absolute path or relative to the config root path.
@@ -254,6 +256,7 @@ class Config(dict):
         :type load: ``Callable[[Reader], Mapping]`` where ``Reader``
             implements a ``read`` method.
         :param silent: Ignore the file if it doesn't exist.
+        :param mode: The mode to open the file with, defaults to ``"r"`` (text).
         :return: ``True`` if the file was loaded successfully.
 
         .. versionadded:: 2.0
@@ -261,7 +264,7 @@ class Config(dict):
         filename = os.path.join(self.root_path, filename)
 
         try:
-            with open(filename) as f:
+            with open(filename, mode=mode) as f:
                 obj = load(f)
         except OSError as e:
             if silent and e.errno in (errno.ENOENT, errno.EISDIR):
2025-05-01 19:59:31,294 - INFO - Grading answer for pallets__flask-4992...
2025-05-01 19:59:31,295 - INFO - report: {'pallets__flask-4992': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['tests/test_config.py::test_config_from_file_toml']}, 'PASS_TO_PASS': {'success': ['tests/test_config.py::test_config_from_pyfile', 'tests/test_config.py::test_config_from_object', 'tests/test_config.py::test_config_from_file_json', 'tests/test_config.py::test_from_prefixed_env', 'tests/test_config.py::test_from_prefixed_env_custom_prefix', 'tests/test_config.py::test_from_prefixed_env_nested', 'tests/test_config.py::test_config_from_mapping', 'tests/test_config.py::test_config_from_class', 'tests/test_config.py::test_config_from_envvar', 'tests/test_config.py::test_config_from_envvar_missing', 'tests/test_config.py::test_config_missing', 'tests/test_config.py::test_config_missing_file', 'tests/test_config.py::test_custom_config_class', 'tests/test_config.py::test_session_lifetime', 'tests/test_config.py::test_get_namespace', 'tests/test_config.py::test_from_pyfile_weird_encoding[utf-8]', 'tests/test_config.py::test_from_pyfile_weird_encoding[iso-8859-15]', 'tests/test_config.py::test_from_pyfile_weird_encoding[latin-1]'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pallets__flask-4992: resolved: False
2025-05-01 19:59:31,295 - INFO - Attempting to stop container sweb.eval.pallets__flask-4992.20250501_195119...
2025-05-01 19:59:46,644 - INFO - Attempting to remove container sweb.eval.pallets__flask-4992.20250501_195119...
2025-05-01 19:59:46,687 - INFO - Container sweb.eval.pallets__flask-4992.20250501_195119 removed.
