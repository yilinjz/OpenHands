```diff
--- a/django/utils/decorators.py
+++ b/django/utils/decorators.py
@@ -37,8 +37,11 @@
         # 'func'. Also, wrap method.__get__() in a function because new
         # attributes can't be set on bound method objects, only on functions.
         bound_method = partial(method.__get__(self, type(self)))
+        # Ensure the partial has the attributes of the original method
+        # for decorators like @wraps to work correctly.
+        update_wrapper(bound_method, method)
         for dec in decorators:
             bound_method = dec(bound_method)
         return bound_method(*args, **kwargs)

     # Copy any attributes that a decorator adds to the function it decorates.

```
