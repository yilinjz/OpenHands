```patch
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -11,6 +11,7 @@
 from ..tree import ExtraTreeRegressor
 from ..utils import check_random_state, check_array, gen_batches
 from ..utils.validation import check_is_fitted, _num_samples
+from ..utils.fixes import _joblib_parallel_args
 
 from .base import BaseEnsemble, _partition_estimators
 
@@ -109,6 +110,10 @@
     n_jobs : int or None, optional (default=None)
         The number of jobs to run in parallel for both `fit` and `predict`.
         ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context.
+        ``-1`` means using all processors. See :term:`Glossary <n_jobs>`
+        for more details.
+    warm_start : bool, optional (default=False)
+        When set to ``True``, reuse the solution of the previous call to fit
+        and add more estimators to the ensemble, otherwise, just fit a whole
         new forest. See :term:`the Glossary <warm_start>`.
     behaviour : 'old' or 'new', optional (default='old')
         Behaviour of the ``decision_function`` which can be either 'old' or
@@ -146,7 +151,8 @@
                   n_jobs=None,
                   behaviour='old',
                   random_state=None,
-                  verbose=0):
+                  verbose=0,
+                  warm_start=False):
         super().__init__(
             base_estimator=ExtraTreeRegressor(
                 max_features=1,
@@ -160,7 +166,8 @@
             max_features=max_features,
             n_jobs=n_jobs,
             random_state=random_state,
-            verbose=verbose)
+            verbose=verbose,
+            warm_start=warm_start)
 
         self.behaviour = behaviour
         self.contamination = contamination
```
